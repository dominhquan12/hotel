/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.booking;

import dao.BookingDAO;
import view.room.*;
import dao.RoomDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BookedRoom;
import model.Booking;
import model.Client;
import model.Room;
import model.User;
import view.user.ManageHomePage;

/**
 *
 * @author Admin
 */
public class ManageBookedRoomPage extends javax.swing.JFrame {

    /**
     * Creates new form ManageRoomPage
     */
    private ArrayList<BookedRoom> listBookedRoom;
    private ArrayList<Room> listRoom;
    private User user;
    private Client client;
    private Booking booking;

    public ManageBookedRoomPage(Booking booking) {
        this.listBookedRoom = new ArrayList<BookedRoom>();
        this.listRoom = new ArrayList<Room>();
        this.booking = booking;
        this.user = booking.getCreator();
        this.client = booking.getClient();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("MANAGE BOOKED ROOM PAGE");

        jLabel2.setText("KEY:");

        jTextField1.setText("1");
        jTextField1.setEnabled(false);

        jButton1.setText("SEARCH");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("BOOKING");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DELETE");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "TYPE", "PRICE", "DES"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("SEARCH EMPTY");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setText("DATE FROM:");

        jTextField2.setText("2022-11-10");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setText("2022-11-12");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel4.setText("DATE TO:");

        jButton6.setText("BACK TO MANAGE HOME PAGE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "TYPE", "PRICE", "DES", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setText("LIST BOOKED ROOM");

        jLabel6.setText("LIST ROOM FREE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton5))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(jButton1)
                                    .addGap(58, 58, 58)
                                    .addComponent(jButton2)
                                    .addGap(36, 36, 36)
                                    .addComponent(jButton3))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(110, 110, 110)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(40, 40, 40)
                            .addComponent(jButton4)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        if ((jTextField1.getText() == null) || (jTextField1.getText().length() == 0)) {
//            return;
//        }
//        RoomDAO rd = new RoomDAO();
//        listRoom = rd.searchRoom(jTextField1.getText().trim());
//
//        String[] columnNames = {"Id", "Name", "Type", "Price", "Description"};
//        String[][] value = new String[listRoom.size()][5];
//        for (int i = 0; i < listRoom.size(); i++) {
//            value[i][0] = listRoom.get(i).getId() + "";
//            value[i][1] = listRoom.get(i).getName();
//            value[i][2] = listRoom.get(i).getType();
//            value[i][3] = listRoom.get(i).getPrice() + "";
//            value[i][4] = listRoom.get(i).getDes();
//        }
//        DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
//            @Override
//            public boolean isCellEditable(int row, int column) {
//                //unable to edit cells
//                return false;
//            }
//        };
//        jTable1.setModel(tableModel);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane.showConfirmDialog(this, "Do you want booking these rooms?");
        booking.setBookedRoom(listBookedRoom);
        BookingDAO bd = new BookingDAO();
        if (bd.addBooking(booking)) {
            JOptionPane.showMessageDialog(this, "booking room successful!");
        } else {
            JOptionPane.showMessageDialog(this, "booking room fail!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            if ((jTextField2.getText() == null) || (jTextField3.getText().length() == 0)) {
                return;
            }
            RoomDAO rd = new RoomDAO();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date_from = sdf.parse(jTextField2.getText().trim());
            Date date_to = sdf.parse(jTextField3.getText().trim());
            listRoom = rd.searchFreeRoom(date_from, date_to);

            String[] columnNames = {"Id", "Name", "Type", "Price", "Description"};
            String[][] value = new String[listRoom.size()][5];
            for (int i = 0; i < listRoom.size(); i++) {
                value[i][0] = listRoom.get(i).getId() + "";
                value[i][1] = listRoom.get(i).getName();
                value[i][2] = listRoom.get(i).getType();
                value[i][3] = listRoom.get(i).getPrice() + "";
                value[i][4] = listRoom.get(i).getDes();
            }
            DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    //unable to edit cells
                    return false;
                }
            };
            jTable1.setModel(tableModel);
            // TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(ManageBookedRoomPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            BookedRoom br = new BookedRoom();
            Room room = new Room();
            int row = jTable1.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(this, "select row before!");
                return;
            } else {
                room.setId(Integer.parseInt(jTable1.getValueAt(row, 0).toString()));
                room.setName(jTable1.getValueAt(row, 1).toString());
                room.setType(jTable1.getValueAt(row, 2).toString());
                room.setPrice(Float.parseFloat(jTable1.getValueAt(row, 3).toString()));
                room.setDes(jTable1.getValueAt(row, 4).toString());
            }
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date checkin = sdf.parse(jTextField2.getText().trim());
            Date checkout = sdf.parse(jTextField3.getText().trim());
            br.setRoom(room);
            br.setCheckin(checkin);
            br.setCheckout(checkout);
            br.setPrice(room.getPrice());
            br.setChecked(true);
            br.setSaleoff(booking.getSaleoff() * br.getPrice());
            listBookedRoom.add(br);
            JOptionPane.showMessageDialog(this, "Booked room successful!");
            getListBookedRoom();
        } catch (ParseException ex) {
            Logger.getLogger(ManageBookedRoomPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void getListBookedRoom() {
        String[] columnNames = {"Id", "Name", "Checkin", "Checkout", "Price", "Checked"};
        String[][] value = new String[listRoom.size()][6];
        for (int i = 0; i < listBookedRoom.size(); i++) {
            value[i][0] = listBookedRoom.get(i).getRoom().getId() + "";
            value[i][1] = listBookedRoom.get(i).getRoom().getName()+ "";
            value[i][2] = listBookedRoom.get(i).getCheckin()+"";
            value[i][3] = listBookedRoom.get(i).getCheckout()+"";
            value[i][4] = listBookedRoom.get(i).getPrice() + "";
            value[i][5] = listBookedRoom.get(i).isChecked()+ "";
        }
        DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
                return false;
            }
        };
        jTable2.setModel(tableModel);
        // TODO add your handling code here:
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        (new ManageHomePage(user)).setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        int row = jTable1.getSelectedRow();
//        if (row < 0) {
//            JOptionPane.showMessageDialog(this, "select row before!");
//            return;
//        } else {
//            int id = Integer.parseInt(jTable1.getValueAt(row, 0).toString());
//            RoomDAO rd = new RoomDAO();
//            if (JOptionPane.showConfirmDialog(this,
//                    "Do you want delete this data?", "Delete Room",
//                    JOptionPane.YES_NO_OPTION) == 1) {
//                return;
//            } else {
//                if (rd.deleteRoom(id)) {
//                    JOptionPane.showMessageDialog(this, "The room is succeffully deletetd!");
//                    if ((jTextField1.getText() == null) || (jTextField1.getText().length() == 0)) {
//                        try {
//                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//                            Date date_from = sdf.parse(jTextField2.getText().trim());
//                            Date date_to = sdf.parse(jTextField3.getText().trim());
//                            listRoom = rd.searchFreeRoom(date_from, date_to);
//                        } catch (ParseException ex) {
//                            Logger.getLogger(ManageBookedRoomPage.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    } else {
//                        listRoom = rd.searchRoom(jTextField1.getText().trim());
//                    }
//
//                    String[] columnNames = {"Id", "Name", "Type", "Price", "Description"};
//                    String[][] value = new String[listRoom.size()][5];
//                    for (int i = 0; i < listRoom.size(); i++) {
//                        value[i][0] = listRoom.get(i).getId() + "";
//                        value[i][1] = listRoom.get(i).getName();
//                        value[i][2] = listRoom.get(i).getType();
//                        value[i][3] = listRoom.get(i).getPrice() + "";
//                        value[i][4] = listRoom.get(i).getDes();
//                    }
//                    DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
//                        @Override
//                        public boolean isCellEditable(int row, int column) {
//                            //unable to edit cells
//                            return false;
//                        }
//                    };
//                    jTable1.setModel(tableModel);
//                }
//            }
//            //
//
//        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
